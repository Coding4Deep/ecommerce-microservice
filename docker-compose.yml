version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:4.4
    container_name: ecommerce-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: ecommerce
    volumes:
      - mongodb_data:/data/db
      - ./data/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - ecommerce-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ecommerce-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - ecommerce-network

  # Vault for Secrets Management
  vault:
    image: hashicorp/vault:1.15
    container_name: ecommerce-vault
    restart: unless-stopped
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: myroot
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    networks:
      - ecommerce-network

  # User Service
  user-service:
    build: ./services/user-service
    container_name: ecommerce-user-service
    restart: unless-stopped
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=mongodb://admin:password123@mongodb:27017/ecommerce?authSource=admin
      - REDIS_URL=redis://:redis123@redis:6379/0
      - JWT_SECRET=your-jwt-secret-change-in-production
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=myroot
    depends_on:
      - mongodb
      - redis
      - vault
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Product Service
  product-service:
    build: ./services/product-service
    container_name: ecommerce-product-service
    restart: unless-stopped
    ports:
      - "8002:8080"
    environment:
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_DATABASE=ecommerce
      - SPRING_DATA_MONGODB_USERNAME=admin
      - SPRING_DATA_MONGODB_PASSWORD=password123
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=admin
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_PASSWORD=redis123
      - VAULT_URI=http://vault:8200
      - VAULT_TOKEN=myroot
    depends_on:
      - mongodb
      - redis
      - vault
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/products/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Cart Service
  cart-service:
    build: ./services/cart-service
    container_name: ecommerce-cart-service
    restart: unless-stopped
    ports:
      - "8003:8000"
    environment:
      - DATABASE_URL=mongodb://admin:password123@mongodb:27017/ecommerce?authSource=admin
      - REDIS_URL=redis://:redis123@redis:6379/1
      - JWT_SECRET=your-jwt-secret-change-in-production
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=myroot
    depends_on:
      - mongodb
      - redis
      - vault
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Notification Service
  notification-service:
    build: ./services/notification-service
    container_name: ecommerce-notification-service
    restart: unless-stopped
    ports:
      - "8005:8005"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/ecommerce?authSource=admin
      - REDIS_URL=redis://:redis123@redis:6379/3
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USER=demo@example.com
      - SMTP_PASS=demo_password
      - FROM_EMAIL=noreply@ecommerce.com
    depends_on:
      - mongodb
      - redis
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Review Service
  review-service:
    build: ./services/review-service
    container_name: ecommerce-review-service
    restart: unless-stopped
    ports:
      - "8006:8006"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/ecommerce?authSource=admin
      - JWT_SECRET=your-jwt-secret-change-in-production
    depends_on:
      - mongodb
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8006/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Inventory Service
  inventory-service:
    build: ./services/inventory-service
    container_name: ecommerce-inventory-service
    restart: unless-stopped
    ports:
      - "8007:8007"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/ecommerce?authSource=admin
      - REDIS_URL=redis://:redis123@redis:6379/4
    depends_on:
      - mongodb
      - redis
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8007/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway
  api-gateway:
    build: ./services/api-gateway
    container_name: ecommerce-api-gateway
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - user-service
      - product-service
      - cart-service
      - notification-service
      - review-service
      - inventory-service
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Admin Service
  admin-service:
    build: ./services/admin-service
    container_name: ecommerce-admin-service
    restart: unless-stopped
    ports:
      - "8009:8000"
    environment:
      - NODE_ENV=development
      - PORT=8000
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/ecommerce?authSource=admin
      - JWT_SECRET=your-jwt-secret-change-in-production-2024
      - ADMIN_REGISTRATION_TOKEN=admin-reg-token-deepak-2024-secure
      - REDIS_URL=redis://:redis123@redis:6379/2
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=myroot
    depends_on:
      - mongodb
      - redis
      - vault
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Web Frontend
  web-frontend:
    build: ./frontend/web-app
    container_name: ecommerce-web-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080
      - REACT_APP_ADMIN_API_URL=http://localhost:8009
    depends_on:
      - api-gateway
      - admin-service
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Admin Frontend
  admin-frontend:
    build: ./frontend/admin-app
    container_name: ecommerce-admin-frontend
    restart: unless-stopped
    ports:
      - "3001:80"
    depends_on:
      - admin-service
    networks:
      - ecommerce-network

networks:
  ecommerce-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
