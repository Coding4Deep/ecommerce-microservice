version: '3.8'

services:
  # Infrastructure Services
  mongodb:
    image: mongo:4.4
    container_name: ecommerce-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: ecommerce
    volumes:
      - mongodb_data:/data/db
    networks:
      - ecommerce-network

  redis:
    image: redis:7-alpine
    container_name: ecommerce-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - ecommerce-network

  # Microservices
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: ecommerce-api-gateway
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - PORT=8080
      - USER_SERVICE_URL=http://user-service:8000
      - PRODUCT_SERVICE_URL=http://product-service:8080
      - CART_SERVICE_URL=http://cart-service:8003
    depends_on:
      - redis
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: ecommerce-user-service
    restart: unless-stopped
    ports:
      - "8001:8000"
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/ecommerce?authSource=admin
      - REDIS_URL=redis://:redis123@redis:6379/0
      - JWT_SECRET=your-jwt-secret-change-in-production
      - REFRESH_SECRET=your-refresh-secret-change-in-production
    depends_on:
      - mongodb
      - redis
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  cart-service:
    build:
      context: ./services/cart-service
      dockerfile: Dockerfile
    container_name: ecommerce-cart-service
    restart: unless-stopped
    ports:
      - "8003:8003"
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/ecommerce?authSource=admin
      - JWT_SECRET=your-jwt-secret-change-in-production
      - NODE_ENV=development
      - PORT=8003
    depends_on:
      - mongodb
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  product-service:
    build:
      context: ./services/product-service
      dockerfile: Dockerfile
    container_name: ecommerce-product-service
    restart: unless-stopped
    ports:
      - "8002:8080"
    environment:
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_DATABASE=ecommerce
      - SPRING_DATA_MONGODB_USERNAME=admin
      - SPRING_DATA_MONGODB_PASSWORD=password123
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=admin
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_PASSWORD=redis123
    depends_on:
      - mongodb
      - redis
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  web-frontend:
    build:
      context: ./frontend/web-app
      dockerfile: Dockerfile
    container_name: ecommerce-web-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080
    depends_on:
      - api-gateway
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
  redis_data:

networks:
  ecommerce-network:
    driver: bridge
